// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://mazino:mazino@localhost:5432/PGdb"
}

model User {
  id                   String          @id
  username             String          @unique
  avatar               String
  firstName            String
  lastName             String
  messages             Message[]
  twoFactorAuthCode    String?
  twoFactorAuthEnabled Boolean         @default(false)
  firstLogin           Boolean         @default(true)
  groups               ChatGroup[]     @relation("UserGroup")
  sentRequests         friendRequest[] @relation("sent")
  receivedRequests     friendRequest[] @relation("received")
  friends              User[]          @relation("friend")
  symmenticfriends     User[]          @relation("friend")
  blockedByUsers       String[]
  blockedUsers         String[]
  // notifications        Notification[]
}

model friendRequest {
  id         String   @id @default(uuid())
  sender     User     @relation("sent", fields: [senderId], references: [id])
  senderId   String
  receiver   User     @relation("received", fields: [receiverId], references: [id])
  receiverId String
  status     String
  createdAt  DateTime @default(now())
  // notifications Notification[]
}

// model Notification {
//   id              String        @id @default(uuid())
//   createdAt       DateTime      @default(now())
//   type            String
//   user            User          @relation(fields: [userId], references: [id])
//   userId          String
//   friendRequest   friendRequest @relation(fields: [friendRequestId], references: [id])
//   friendRequestId String
// }

model ChatGroup {
  id         String    @id @default(uuid())
  name       String?
  members    User[]    @relation("UserGroup")
  avatar     String?
  password   String?
  status     String?
  messages   Message[]
  owner      String?
  modes      String[]
  mutedUsers String[]
  type       String?
}

model Message {
  id          Int       @id @default(autoincrement())
  content     String
  createdAt   DateTime  @default(now())
  sender      User      @relation(fields: [userId], references: [id])
  userId      String
  chatGroup   ChatGroup @relation(fields: [chatGroupId], references: [id])
  chatGroupId String
}
